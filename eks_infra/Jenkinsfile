pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
        git branch: 'master',
        credentialsId: 'githubhttp',
        url: 'https://github.com/vardhana1210/devops.git'
      }
    }

    stage('Terraform Init') {
      steps {
        // Initialize Terraform
        dir('eks_infra/terraform') {
          withAWS(credentials: 'awsaccess') {
            sh 'terraform init -backend-config="bucket=harsha-eks-demo"'
          }
        }
      }
    }

    stage('Terraform Plan') {
      steps {
        // Generate Terraform plan
        dir('eks_infra/terraform') {
          withAWS(credentials: 'awsaccess') {
            sh 'terraform plan'
          }
        }
      }
    }

    stage('Terraform Apply/Destroy') {
      steps {
        // Prompt user for input to choose apply or destroy
        script {
          def userInput = input(
            message: 'Deploy or Destroy the infrastructure?',
            parameters: [
              choice(choices: ['Apply', 'Destroy'], description: 'Choose an action', name: 'ACTION')
            ]
          )

          if (userInput == 'Apply') {
            // Apply Terraform changes
            dir('eks_infra/terraform') {
              withAWS(credentials: 'awsaccess') {
                sh 'terraform apply -auto-approve'
              }
            }
          } else if (userInput == 'Destroy') {
            // Destroy Terraform infrastructure
            dir('eks_infra/terraform') {
              withAWS(credentials: 'awsaccess') {
                sh 'terraform destroy -auto-approve'
              }
            }
          } else {
            error "Invalid choice: ${userInput}"
          }
        }
      }
    }
  }
}
